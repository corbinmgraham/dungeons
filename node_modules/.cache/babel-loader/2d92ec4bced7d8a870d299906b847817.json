{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _parser = _interopRequireDefault(require(\"./parser\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar Processor = /*#__PURE__*/function () {\n  function Processor(func, options) {\n    this.func = func || function noop() {};\n\n    this.funcRes = null;\n    this.options = options;\n  }\n\n  var _proto = Processor.prototype;\n\n  _proto._shouldUpdateSelector = function _shouldUpdateSelector(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var merged = Object.assign({}, this.options, options);\n\n    if (merged.updateSelector === false) {\n      return false;\n    } else {\n      return typeof rule !== \"string\";\n    }\n  };\n\n  _proto._isLossy = function _isLossy(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var merged = Object.assign({}, this.options, options);\n\n    if (merged.lossless === false) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  _proto._root = function _root(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var parser = new _parser[\"default\"](rule, this._parseOptions(options));\n    return parser.root;\n  };\n\n  _proto._parseOptions = function _parseOptions(options) {\n    return {\n      lossy: this._isLossy(options)\n    };\n  };\n\n  _proto._run = function _run(rule, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    return new Promise(function (resolve, reject) {\n      try {\n        var root = _this._root(rule, options);\n\n        Promise.resolve(_this.func(root)).then(function (transform) {\n          var string = undefined;\n\n          if (_this._shouldUpdateSelector(rule, options)) {\n            string = root.toString();\n            rule.selector = string;\n          }\n\n          return {\n            transform: transform,\n            root: root,\n            string: string\n          };\n        }).then(resolve, reject);\n      } catch (e) {\n        reject(e);\n        return;\n      }\n    });\n  };\n\n  _proto._runSync = function _runSync(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var root = this._root(rule, options);\n\n    var transform = this.func(root);\n\n    if (transform && typeof transform.then === \"function\") {\n      throw new Error(\"Selector processor returned a promise to a synchronous call.\");\n    }\n\n    var string = undefined;\n\n    if (options.updateSelector && typeof rule !== \"string\") {\n      string = root.toString();\n      rule.selector = string;\n    }\n\n    return {\n      transform: transform,\n      root: root,\n      string: string\n    };\n  }\n  /**\n   * Process rule into a selector AST.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {Promise<parser.Root>} The AST of the selector after processing it.\n   */\n  ;\n\n  _proto.ast = function ast(rule, options) {\n    return this._run(rule, options).then(function (result) {\n      return result.root;\n    });\n  }\n  /**\n   * Process rule into a selector AST synchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {parser.Root} The AST of the selector after processing it.\n   */\n  ;\n\n  _proto.astSync = function astSync(rule, options) {\n    return this._runSync(rule, options).root;\n  }\n  /**\n   * Process a selector into a transformed value asynchronously\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {Promise<any>} The value returned by the processor.\n   */\n  ;\n\n  _proto.transform = function transform(rule, options) {\n    return this._run(rule, options).then(function (result) {\n      return result.transform;\n    });\n  }\n  /**\n   * Process a selector into a transformed value synchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {any} The value returned by the processor.\n   */\n  ;\n\n  _proto.transformSync = function transformSync(rule, options) {\n    return this._runSync(rule, options).transform;\n  }\n  /**\n   * Process a selector into a new selector string asynchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {string} the selector after processing.\n   */\n  ;\n\n  _proto.process = function process(rule, options) {\n    return this._run(rule, options).then(function (result) {\n      return result.string || result.root.toString();\n    });\n  }\n  /**\n   * Process a selector into a new selector string synchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {string} the selector after processing.\n   */\n  ;\n\n  _proto.processSync = function processSync(rule, options) {\n    var result = this._runSync(rule, options);\n\n    return result.string || result.root.toString();\n  };\n\n  return Processor;\n}();\n\nexports[\"default\"] = Processor;\nmodule.exports = exports.default;","map":{"version":3,"names":["exports","__esModule","_parser","_interopRequireDefault","require","obj","Processor","func","options","noop","funcRes","_proto","prototype","_shouldUpdateSelector","rule","merged","Object","assign","updateSelector","_isLossy","lossless","_root","parser","_parseOptions","root","lossy","_run","_this","Promise","resolve","reject","then","transform","string","undefined","toString","selector","e","_runSync","Error","ast","result","astSync","transformSync","process","processSync","module","default"],"sources":["/Users/vinnyzefran/Desktop/fitnessFrontEnd/node_modules/postcss-selector-parser/dist/processor.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _parser = _interopRequireDefault(require(\"./parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Processor = /*#__PURE__*/function () {\n  function Processor(func, options) {\n    this.func = func || function noop() {};\n\n    this.funcRes = null;\n    this.options = options;\n  }\n\n  var _proto = Processor.prototype;\n\n  _proto._shouldUpdateSelector = function _shouldUpdateSelector(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var merged = Object.assign({}, this.options, options);\n\n    if (merged.updateSelector === false) {\n      return false;\n    } else {\n      return typeof rule !== \"string\";\n    }\n  };\n\n  _proto._isLossy = function _isLossy(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var merged = Object.assign({}, this.options, options);\n\n    if (merged.lossless === false) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  _proto._root = function _root(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var parser = new _parser[\"default\"](rule, this._parseOptions(options));\n    return parser.root;\n  };\n\n  _proto._parseOptions = function _parseOptions(options) {\n    return {\n      lossy: this._isLossy(options)\n    };\n  };\n\n  _proto._run = function _run(rule, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    return new Promise(function (resolve, reject) {\n      try {\n        var root = _this._root(rule, options);\n\n        Promise.resolve(_this.func(root)).then(function (transform) {\n          var string = undefined;\n\n          if (_this._shouldUpdateSelector(rule, options)) {\n            string = root.toString();\n            rule.selector = string;\n          }\n\n          return {\n            transform: transform,\n            root: root,\n            string: string\n          };\n        }).then(resolve, reject);\n      } catch (e) {\n        reject(e);\n        return;\n      }\n    });\n  };\n\n  _proto._runSync = function _runSync(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var root = this._root(rule, options);\n\n    var transform = this.func(root);\n\n    if (transform && typeof transform.then === \"function\") {\n      throw new Error(\"Selector processor returned a promise to a synchronous call.\");\n    }\n\n    var string = undefined;\n\n    if (options.updateSelector && typeof rule !== \"string\") {\n      string = root.toString();\n      rule.selector = string;\n    }\n\n    return {\n      transform: transform,\n      root: root,\n      string: string\n    };\n  }\n  /**\n   * Process rule into a selector AST.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {Promise<parser.Root>} The AST of the selector after processing it.\n   */\n  ;\n\n  _proto.ast = function ast(rule, options) {\n    return this._run(rule, options).then(function (result) {\n      return result.root;\n    });\n  }\n  /**\n   * Process rule into a selector AST synchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {parser.Root} The AST of the selector after processing it.\n   */\n  ;\n\n  _proto.astSync = function astSync(rule, options) {\n    return this._runSync(rule, options).root;\n  }\n  /**\n   * Process a selector into a transformed value asynchronously\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {Promise<any>} The value returned by the processor.\n   */\n  ;\n\n  _proto.transform = function transform(rule, options) {\n    return this._run(rule, options).then(function (result) {\n      return result.transform;\n    });\n  }\n  /**\n   * Process a selector into a transformed value synchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {any} The value returned by the processor.\n   */\n  ;\n\n  _proto.transformSync = function transformSync(rule, options) {\n    return this._runSync(rule, options).transform;\n  }\n  /**\n   * Process a selector into a new selector string asynchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {string} the selector after processing.\n   */\n  ;\n\n  _proto.process = function process(rule, options) {\n    return this._run(rule, options).then(function (result) {\n      return result.string || result.root.toString();\n    });\n  }\n  /**\n   * Process a selector into a new selector string synchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {string} the selector after processing.\n   */\n  ;\n\n  _proto.processSync = function processSync(rule, options) {\n    var result = this._runSync(rule, options);\n\n    return result.string || result.root.toString();\n  };\n\n  return Processor;\n}();\n\nexports[\"default\"] = Processor;\nmodule.exports = exports.default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}