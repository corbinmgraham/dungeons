{"ast":null,"code":"var _jsxFileName = \"/Users/vinnyzefran/Desktop/fitnessFrontEnd/src/components/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignUp = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const SignUpUser = userObject => {\n    console.log(userObject);\n    fetch('http://fitnesstrac-kr.herokuapp.com/api/users/register', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userObject)\n    }).then(response => response.json()).then(result => {\n      console.log(result);\n    }).catch(console.error);\n  };\n\n  const LogInUser = userObject => {\n    console.log(userObject);\n    fetch('http://fitnesstrac-kr.herokuapp.com/api/users/register', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userObject)\n    }).then(response => response.json()).then(result => {\n      console.log(result);\n    }).catch(console.error);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const temp = {\n      username: username,\n      password: password\n    };\n    SignUpUser(temp); //clears temp object for future inputs\n\n    temp = {};\n    setUsername(\"\");\n    setPassword(\"\");\n  };\n\n  const handleLogIn = event => {\n    event.preventDefault();\n    const temp = {\n      username: username,\n      password: password\n    };\n    SignUpUser(temp); //clears temp object for future inputs\n\n    temp = {};\n    setUsername(\"\");\n    setPassword(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Username\",\n        onChange: event => {\n          setUsername(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Password\",\n        onChange: event => {\n          setPassword(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Log-in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: [\" \", \"Don't have an account? Sign up\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SignUp, \"Lrw7JeD9zj6OUWhT/IH4OIvPKEk=\");\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","SignUp","username","setUsername","password","setPassword","SignUpUser","userObject","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","result","catch","error","LogInUser","handleSubmit","event","preventDefault","temp","handleLogIn","target","value"],"sources":["/Users/vinnyzefran/Desktop/fitnessFrontEnd/src/components/SignUp.js"],"sourcesContent":["\nimport React, { useState } from \"react\"\n\n\n\nconst SignUp = () => {\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n\n    const SignUpUser = (userObject) => {\n        console.log(userObject)\n        fetch('http://fitnesstrac-kr.herokuapp.com/api/users/register', {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(userObject)\n        }).then(response => response.json())\n            .then(result => {\n                console.log(result);\n            })\n            .catch(console.error);\n    }\n\n    const LogInUser = (userObject) => {\n        console.log(userObject)\n        fetch('http://fitnesstrac-kr.herokuapp.com/api/users/register', {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(userObject)\n        }).then(response => response.json())\n            .then(result => {\n                console.log(result);\n            })\n            .catch(console.error);\n    }\n\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const temp =\n        {\n            username: username,\n            password: password\n        }\n            ;\n        SignUpUser(temp);\n        //clears temp object for future inputs\n        temp = {};\n        setUsername(\"\");\n        setPassword(\"\");\n    }\n    const handleLogIn = (event) => {\n        event.preventDefault()\n        const temp =\n        {\n            username: username,\n            password: password\n        }\n            ;\n        SignUpUser(temp);\n        //clears temp object for future inputs\n        temp = {};\n        setUsername(\"\");\n        setPassword(\"\");\n    }\n    return (\n        <>\n            <form>\n                {/* <input value={user} onChange={handleChange} placeholder=\"user\"></input> */}\n                <input placeholder=\"Username\" onChange={(event) => { setUsername(event.target.value) }}></input>\n                <input placeholder=\"Password\" onChange={(event) => { setPassword(event.target.value) }}\n                ></input>\n            </form>\n            <button >Log-in</button>\n            <button onClick={handleSubmit}>\n                {\" \"}\n        Don't have an account? Sign up\n      </button>\n        </>\n\n\n\n    )\n}\nexport default SignUp;"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAIA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACjB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;;EAGA,MAAMM,UAAU,GAAIC,UAAD,IAAgB;IAC/BC,OAAO,CAACC,GAAR,CAAYF,UAAZ;IACAG,KAAK,CAAC,wDAAD,EAA2D;MAC5DC,MAAM,EAAE,MADoD;MAE5DC,OAAO,EAAE;QACL,gBAAgB;MADX,CAFmD;MAK5DC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,UAAf;IALsD,CAA3D,CAAL,CAMGS,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANpB,EAOKF,IAPL,CAOUG,MAAM,IAAI;MACZX,OAAO,CAACC,GAAR,CAAYU,MAAZ;IACH,CATL,EAUKC,KAVL,CAUWZ,OAAO,CAACa,KAVnB;EAWH,CAbD;;EAeA,MAAMC,SAAS,GAAIf,UAAD,IAAgB;IAC9BC,OAAO,CAACC,GAAR,CAAYF,UAAZ;IACAG,KAAK,CAAC,wDAAD,EAA2D;MAC5DC,MAAM,EAAE,MADoD;MAE5DC,OAAO,EAAE;QACL,gBAAgB;MADX,CAFmD;MAK5DC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,UAAf;IALsD,CAA3D,CAAL,CAMGS,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANpB,EAOKF,IAPL,CAOUG,MAAM,IAAI;MACZX,OAAO,CAACC,GAAR,CAAYU,MAAZ;IACH,CATL,EAUKC,KAVL,CAUWZ,OAAO,CAACa,KAVnB;EAWH,CAbD;;EAiBA,MAAME,YAAY,GAAIC,KAAD,IAAW;IAC5BA,KAAK,CAACC,cAAN;IACA,MAAMC,IAAI,GACV;MACIxB,QAAQ,EAAEA,QADd;MAEIE,QAAQ,EAAEA;IAFd,CADA;IAMAE,UAAU,CAACoB,IAAD,CAAV,CAR4B,CAS5B;;IACAA,IAAI,GAAG,EAAP;IACAvB,WAAW,CAAC,EAAD,CAAX;IACAE,WAAW,CAAC,EAAD,CAAX;EACH,CAbD;;EAcA,MAAMsB,WAAW,GAAIH,KAAD,IAAW;IAC3BA,KAAK,CAACC,cAAN;IACA,MAAMC,IAAI,GACV;MACIxB,QAAQ,EAAEA,QADd;MAEIE,QAAQ,EAAEA;IAFd,CADA;IAMAE,UAAU,CAACoB,IAAD,CAAV,CAR2B,CAS3B;;IACAA,IAAI,GAAG,EAAP;IACAvB,WAAW,CAAC,EAAD,CAAX;IACAE,WAAW,CAAC,EAAD,CAAX;EACH,CAbD;;EAcA,oBACI;IAAA,wBACI;MAAA,wBAEI;QAAO,WAAW,EAAC,UAAnB;QAA8B,QAAQ,EAAGmB,KAAD,IAAW;UAAErB,WAAW,CAACqB,KAAK,CAACI,MAAN,CAAaC,KAAd,CAAX;QAAiC;MAAtF;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAO,WAAW,EAAC,UAAnB;QAA8B,QAAQ,EAAGL,KAAD,IAAW;UAAEnB,WAAW,CAACmB,KAAK,CAACI,MAAN,CAAaC,KAAd,CAAX;QAAiC;MAAtF;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAOI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAPJ,eAQI;MAAQ,OAAO,EAAEN,YAAjB;MAAA,WACK,GADL;IAAA;MAAA;MAAA;MAAA;IAAA,QARJ;EAAA,gBADJ;AAkBH,CAnFD;;GAAMtB,M;;KAAAA,M;AAoFN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}