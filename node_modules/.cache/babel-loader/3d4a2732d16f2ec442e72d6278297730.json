{"ast":null,"code":"var _jsxFileName = \"/Users/vinnyzefran/Desktop/fitnessFrontEnd/src/components/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignUp = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const loginUser = (username, pass) => {\n    fetch('http://fitnesstrac-kr.herokuapp.com/api/users/register', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: 'superman27',\n        password: 'krypt0n0rbust'\n      })\n    }).then(response => response.json()).then(result => {\n      console.log(result);\n    }).catch(console.error);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const temp = {\n      user: {\n        username: username,\n        password: password\n      }\n    };\n    console.log(username, password);\n    loginUser(temp); //clears temp object for future inputs\n\n    temp = {};\n    setUsername(\"\");\n    setPassword(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Username\",\n        onChange: event => {\n          setUsername(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Password\",\n        onChange: event => {\n          setPassword(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Enter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: [\" \", \"Don't have an account? Sign up\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SignUp, \"Lrw7JeD9zj6OUWhT/IH4OIvPKEk=\");\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","SignUp","username","setUsername","password","setPassword","loginUser","pass","fetch","method","headers","body","JSON","stringify","then","response","json","result","console","log","catch","error","handleSubmit","event","preventDefault","temp","user","target","value"],"sources":["/Users/vinnyzefran/Desktop/fitnessFrontEnd/src/components/SignUp.js"],"sourcesContent":["\nimport React, { useState } from \"react\"\n\n\n\nconst SignUp = () => {\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n\n    const loginUser = (username, pass) =>{\n        fetch('http://fitnesstrac-kr.herokuapp.com/api/users/register', {\n  method: \"POST\",\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    username: 'superman27',\n    password: 'krypt0n0rbust'\n  })\n}).then(response => response.json())\n  .then(result => {\n    console.log(result);\n  })\n  .catch(console.error);\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const temp = {\n            user: {\n                username: username,\n                password: password,\n            },\n        };\n        console.log(username, password)\n        loginUser(temp);\n        //clears temp object for future inputs\n        temp = {};\n        setUsername(\"\");\n        setPassword(\"\");\n    }\n    return (\n        <>\n            <form>\n                {/* <input value={user} onChange={handleChange} placeholder=\"user\"></input> */}\n                <input placeholder=\"Username\" onChange={(event) => { setUsername(event.target.value) }}></input>\n                <input placeholder=\"Password\" onChange={(event) => { setPassword(event.target.value) }}\n                ></input>\n            </form>\n            <button onClick={handleSubmit}>Enter</button>\n            <button>\n                {\" \"}\n        Don't have an account? Sign up\n      </button>\n        </>\n\n\n\n    )\n}\nexport default SignUp;"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAIA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACjB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;;EAGA,MAAMM,SAAS,GAAG,CAACJ,QAAD,EAAWK,IAAX,KAAmB;IACjCC,KAAK,CAAC,wDAAD,EAA2D;MACtEC,MAAM,EAAE,MAD8D;MAEtEC,OAAO,EAAE;QACP,gBAAgB;MADT,CAF6D;MAKtEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnBX,QAAQ,EAAE,YADS;QAEnBE,QAAQ,EAAE;MAFS,CAAf;IALgE,CAA3D,CAAL,CASLU,IATK,CASAC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EATZ,EAULF,IAVK,CAUAG,MAAM,IAAI;MACdC,OAAO,CAACC,GAAR,CAAYF,MAAZ;IACD,CAZK,EAaLG,KAbK,CAaCF,OAAO,CAACG,KAbT;EAcH,CAfD;;EAiBA,MAAMC,YAAY,GAAIC,KAAD,IAAW;IAC5BA,KAAK,CAACC,cAAN;IACA,MAAMC,IAAI,GAAG;MACTC,IAAI,EAAE;QACFxB,QAAQ,EAAEA,QADR;QAEFE,QAAQ,EAAEA;MAFR;IADG,CAAb;IAMAc,OAAO,CAACC,GAAR,CAAYjB,QAAZ,EAAsBE,QAAtB;IACAE,SAAS,CAACmB,IAAD,CAAT,CAT4B,CAU5B;;IACAA,IAAI,GAAG,EAAP;IACAtB,WAAW,CAAC,EAAD,CAAX;IACAE,WAAW,CAAC,EAAD,CAAX;EACH,CAdD;;EAeA,oBACI;IAAA,wBACI;MAAA,wBAEI;QAAO,WAAW,EAAC,UAAnB;QAA8B,QAAQ,EAAGkB,KAAD,IAAW;UAAEpB,WAAW,CAACoB,KAAK,CAACI,MAAN,CAAaC,KAAd,CAAX;QAAiC;MAAtF;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAO,WAAW,EAAC,UAAnB;QAA8B,QAAQ,EAAGL,KAAD,IAAW;UAAElB,WAAW,CAACkB,KAAK,CAACI,MAAN,CAAaC,KAAd,CAAX;QAAiC;MAAtF;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAOI;MAAQ,OAAO,EAAEN,YAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAPJ,eAQI;MAAA,WACK,GADL;IAAA;MAAA;MAAA;MAAA;IAAA,QARJ;EAAA,gBADJ;AAkBH,CAvDD;;GAAMrB,M;;KAAAA,M;AAwDN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}